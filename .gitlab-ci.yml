---
stages:
  - linting
  - spelling_check
  - deploy

variables:
  GIT_DEPTH: 0
  GIT_STRATEGY: clone
  GIT_SUBMODULE_STRATEGY: recursive

yamllint:
  stage: linting
  image: registry.gitlab.com/pipeline-components/yamllint:0.31.0
  script:
    - yamllint .

# markdownlint:
#   stage: linting
#   image: registry.gitlab.com/pipeline-components/markdownlint:latest
#   script:
#     - mdl --style all --warnings .

spell_check:
  stage: spelling_check
  image: ghcr.io/oldtyt/docker-cspell
  script:
    - cspell "**.md"

pages:
  stage: "deploy"
  image:
    name: registry.gitlab.com/pages/hugo:0.120.4
    entrypoint: [""]
  only: [master]
  script:
    - apk add --no-cache brotli
    - echo "BASEURL=$BASEURL, ENV=$ENV"
    - hugo --gc --minify --destination=public --baseURL=$BASEURL  --environment $ENV
    - find public -type f -regex '.*\.\(css\|html\|js\|txt\|xml\)$' -exec gzip -f -k {} \;
    - find public -type f -regex '.*\.\(css\|html\|js\|txt\|xml\)$' -exec brotli -f -k {} \;
  environment:
    name: "Pages oldtyt.xyz"
    url: "https://oldtyt.xyz"
  artifacts:
    paths:
      - public
  variables:
    BASEURL: "https://oldtyt.xyz"
    ENV: production
  needs:
    - yamllint
    - spell_check
    # - markdownlint
